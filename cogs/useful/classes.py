import random

import discord

ending_note = "Para mais informa√ß√µes, escreva !help <comando>.\n" \
              "Obs.: como ainda n√£o hospedamos o bot, ele n√£o funciona" \
              " a todo instante. Verifique se o mesmo est√° online."


class Ping:
    def __init__(self):
        self.brief = "Retorna a lat√™ncia do nosso bot."
        self.description = 'Responde "Pong!" seguido da lat√™ncia (ou ping) do bot em milissegundos. %' \
                           '```!ping```'


class Eightball:
    def __init__(self):
        self.brief = "Responde a sua pergunta de forma duvidosa."
        self.description = "Responde perguntas de advinha√ß√£o, como o brinquedo Magic 8Ball, inventado nos EUA na" \
                           " d√©cada de 50. % ```!8ball eu vou ser rico?``` ```!eightball o Gilson √© o cara?```"
        self.responses = [
            'Sim.',
            '√â certo.',
            'Sem d√∫vida.',
            'F√© que sim.',
            'Com certeza.',
            'Provavelmente.',
            'A meu ver, sim.',
            'Prov√°vel que n√£o.',
            'N√£o conte com isso.',
            'N√£o, de jeito nenhum.',
            'Tenho minhas d√∫vidas.',
            'Sim - definitivamente.',
            'Sinais apontam que sim.',
            'Voc√™ pode contar com isso.',
            'Meus contatos dizem que n√£o.',
            'Concentre-se e tente de novo.',
            'Olha... Melhor eu ficar quieto.',
            'Pergunte-me depois, n√£o queto te chatear.',
            'Acho melhor voc√™ n√£o receber uma resposta para essa pergunta...',
            'N√£o posso fazer advinha√ß√µes sobre isso... Pergunta profunda demais para mim.'
        ]


class Clear:
    def __init__(self):
        self.brief = "Limpa as mensagens do canal, exceto as fixadas."
        self.description = "Apaga as mensagens do canal onde foi chamado, exceto as que foram fixadas. O valor" \
                           " padr√£o √© cinco. Para apagar to das as mensagens, basta usar `all` como par√¢metro. %" \
                           " ```!clear``` ```!clear 10``` ```!clear all```"


class Status:
    def __init__(self):
        self.data = {
            "playing": [
                "Sky: Children of the Light",
                "GRIS",
                "Hyper Light Drifter",
                "Katana ZERO",
                "Celeste",
                "The First Tree",
                "Hollow Knight",
                "The Legend of Zelda",
                "Genshin Impact",
                "COD Zombies",
                "Minecraft",
                "Garticphone",
                "Metal Gear",
                "Hotline Miami",
                "Stardew Valley"
            ],
            "listening": [
                "A trilha sonora de Undertale",
                "ALL OUT das K/DA",
                "o Joel cantar pra Ellie",
                "A trilha sonora de Life is Strange e chorando muito",
                "A trilha sonora de Cry of Fear",
                "A trilha sonora de Bloodborne"
            ]
        }

    def get_status(self):
        active_status = random.choice(list(self.data.keys()))
        status_value = self.data[active_status][random.randint(0, len(self.data[active_status]) - 1)]
        if active_status == "playing":
            return discord.Game(name=f'üéÆ {status_value} || !help')
        elif active_status == "listening":
            return discord.Activity(type=discord.ActivityType.listening, name=f'üé∂ {status_value} || !help')


class Info:
    def __init__(self):
        self.ping = Ping()
        self.clear = Clear()
        self.status = Status()
        self.eightball = Eightball()
